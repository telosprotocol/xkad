// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ledger.proto

#ifndef PROTOBUF_INCLUDED_ledger_2eproto
#define PROTOBUF_INCLUDED_ledger_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ledger_2eproto 

namespace protobuf_ledger_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ledger_2eproto
namespace top {
namespace kadmlia {
namespace pb {
class PbBootstrapCache;
class PbBootstrapCacheDefaultTypeInternal;
extern PbBootstrapCacheDefaultTypeInternal _PbBootstrapCache_default_instance_;
class PbBootstrapEndpoint;
class PbBootstrapEndpointDefaultTypeInternal;
extern PbBootstrapEndpointDefaultTypeInternal _PbBootstrapEndpoint_default_instance_;
}  // namespace pb
}  // namespace kadmlia
}  // namespace top
namespace google {
namespace protobuf {
template<> ::top::kadmlia::pb::PbBootstrapCache* Arena::CreateMaybeMessage<::top::kadmlia::pb::PbBootstrapCache>(Arena*);
template<> ::top::kadmlia::pb::PbBootstrapEndpoint* Arena::CreateMaybeMessage<::top::kadmlia::pb::PbBootstrapEndpoint>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace top {
namespace kadmlia {
namespace pb {

// ===================================================================

class PbBootstrapEndpoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:top.kadmlia.pb.PbBootstrapEndpoint) */ {
 public:
  PbBootstrapEndpoint();
  virtual ~PbBootstrapEndpoint();

  PbBootstrapEndpoint(const PbBootstrapEndpoint& from);

  inline PbBootstrapEndpoint& operator=(const PbBootstrapEndpoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbBootstrapEndpoint(PbBootstrapEndpoint&& from) noexcept
    : PbBootstrapEndpoint() {
    *this = ::std::move(from);
  }

  inline PbBootstrapEndpoint& operator=(PbBootstrapEndpoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbBootstrapEndpoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbBootstrapEndpoint* internal_default_instance() {
    return reinterpret_cast<const PbBootstrapEndpoint*>(
               &_PbBootstrapEndpoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PbBootstrapEndpoint* other);
  friend void swap(PbBootstrapEndpoint& a, PbBootstrapEndpoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbBootstrapEndpoint* New() const final {
    return CreateMaybeMessage<PbBootstrapEndpoint>(NULL);
  }

  PbBootstrapEndpoint* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PbBootstrapEndpoint>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PbBootstrapEndpoint& from);
  void MergeFrom(const PbBootstrapEndpoint& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PbBootstrapEndpoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // uint32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:top.kadmlia.pb.PbBootstrapEndpoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::uint32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ledger_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PbBootstrapCache : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:top.kadmlia.pb.PbBootstrapCache) */ {
 public:
  PbBootstrapCache();
  virtual ~PbBootstrapCache();

  PbBootstrapCache(const PbBootstrapCache& from);

  inline PbBootstrapCache& operator=(const PbBootstrapCache& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbBootstrapCache(PbBootstrapCache&& from) noexcept
    : PbBootstrapCache() {
    *this = ::std::move(from);
  }

  inline PbBootstrapCache& operator=(PbBootstrapCache&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PbBootstrapCache& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbBootstrapCache* internal_default_instance() {
    return reinterpret_cast<const PbBootstrapCache*>(
               &_PbBootstrapCache_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PbBootstrapCache* other);
  friend void swap(PbBootstrapCache& a, PbBootstrapCache& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbBootstrapCache* New() const final {
    return CreateMaybeMessage<PbBootstrapCache>(NULL);
  }

  PbBootstrapCache* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PbBootstrapCache>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PbBootstrapCache& from);
  void MergeFrom(const PbBootstrapCache& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PbBootstrapCache* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .top.kadmlia.pb.PbBootstrapEndpoint endpoints = 1;
  int endpoints_size() const;
  void clear_endpoints();
  static const int kEndpointsFieldNumber = 1;
  ::top::kadmlia::pb::PbBootstrapEndpoint* mutable_endpoints(int index);
  ::google::protobuf::RepeatedPtrField< ::top::kadmlia::pb::PbBootstrapEndpoint >*
      mutable_endpoints();
  const ::top::kadmlia::pb::PbBootstrapEndpoint& endpoints(int index) const;
  ::top::kadmlia::pb::PbBootstrapEndpoint* add_endpoints();
  const ::google::protobuf::RepeatedPtrField< ::top::kadmlia::pb::PbBootstrapEndpoint >&
      endpoints() const;

  // @@protoc_insertion_point(class_scope:top.kadmlia.pb.PbBootstrapCache)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::top::kadmlia::pb::PbBootstrapEndpoint > endpoints_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ledger_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PbBootstrapEndpoint

// string ip = 1;
inline void PbBootstrapEndpoint::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PbBootstrapEndpoint::ip() const {
  // @@protoc_insertion_point(field_get:top.kadmlia.pb.PbBootstrapEndpoint.ip)
  return ip_.GetNoArena();
}
inline void PbBootstrapEndpoint::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:top.kadmlia.pb.PbBootstrapEndpoint.ip)
}
#if LANG_CXX11
inline void PbBootstrapEndpoint::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:top.kadmlia.pb.PbBootstrapEndpoint.ip)
}
#endif
inline void PbBootstrapEndpoint::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:top.kadmlia.pb.PbBootstrapEndpoint.ip)
}
inline void PbBootstrapEndpoint::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:top.kadmlia.pb.PbBootstrapEndpoint.ip)
}
inline ::std::string* PbBootstrapEndpoint::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:top.kadmlia.pb.PbBootstrapEndpoint.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PbBootstrapEndpoint::release_ip() {
  // @@protoc_insertion_point(field_release:top.kadmlia.pb.PbBootstrapEndpoint.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PbBootstrapEndpoint::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:top.kadmlia.pb.PbBootstrapEndpoint.ip)
}

// uint32 port = 2;
inline void PbBootstrapEndpoint::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 PbBootstrapEndpoint::port() const {
  // @@protoc_insertion_point(field_get:top.kadmlia.pb.PbBootstrapEndpoint.port)
  return port_;
}
inline void PbBootstrapEndpoint::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:top.kadmlia.pb.PbBootstrapEndpoint.port)
}

// -------------------------------------------------------------------

// PbBootstrapCache

// repeated .top.kadmlia.pb.PbBootstrapEndpoint endpoints = 1;
inline int PbBootstrapCache::endpoints_size() const {
  return endpoints_.size();
}
inline void PbBootstrapCache::clear_endpoints() {
  endpoints_.Clear();
}
inline ::top::kadmlia::pb::PbBootstrapEndpoint* PbBootstrapCache::mutable_endpoints(int index) {
  // @@protoc_insertion_point(field_mutable:top.kadmlia.pb.PbBootstrapCache.endpoints)
  return endpoints_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::top::kadmlia::pb::PbBootstrapEndpoint >*
PbBootstrapCache::mutable_endpoints() {
  // @@protoc_insertion_point(field_mutable_list:top.kadmlia.pb.PbBootstrapCache.endpoints)
  return &endpoints_;
}
inline const ::top::kadmlia::pb::PbBootstrapEndpoint& PbBootstrapCache::endpoints(int index) const {
  // @@protoc_insertion_point(field_get:top.kadmlia.pb.PbBootstrapCache.endpoints)
  return endpoints_.Get(index);
}
inline ::top::kadmlia::pb::PbBootstrapEndpoint* PbBootstrapCache::add_endpoints() {
  // @@protoc_insertion_point(field_add:top.kadmlia.pb.PbBootstrapCache.endpoints)
  return endpoints_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::top::kadmlia::pb::PbBootstrapEndpoint >&
PbBootstrapCache::endpoints() const {
  // @@protoc_insertion_point(field_list:top.kadmlia.pb.PbBootstrapCache.endpoints)
  return endpoints_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace kadmlia
}  // namespace top

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ledger_2eproto
